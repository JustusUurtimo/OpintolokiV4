package ComTests;
// Generated by ComTest BEGIN
import javaOpintoloki.*;
// Generated by ComTest END
import java.io.*;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;

/**
 * Test class made by ComTest
 * @version 2019.05.10 15:20:44 // Generated by ComTest
 *
 */
public class OpintolokiTest {


  // Generated by ComTest BEGIN  // Opintoloki: 14
   private Opintoloki opintoloki; 
   private Kurssi aku1; 
   private Kurssi aku2; 
   private int jid1; 
   private int jid2; 
   private Suoritus pitsi21; 
   private Suoritus pitsi11; 
   private Suoritus pitsi22; 
   private Suoritus pitsi12; 
   private Suoritus pitsi23; 

   @SuppressWarnings("javadoc")
   public void alustaOpintoloki() {
     opintoloki = new Opintoloki(); 
     aku1 = new Kurssi(); aku1.annaVakio(); aku1.setOid(); 
     aku2 = new Kurssi(); aku2.annaVakio(); aku2.setOid(); 
     jid1 = aku1.getId(); 
     jid2 = aku2.getId(); 
     pitsi21 = new Suoritus(jid2); pitsi21.annaVakio(jid2); 
     pitsi11 = new Suoritus(jid1); pitsi11.annaVakio(jid1); 
     pitsi22 = new Suoritus(jid2); pitsi22.annaVakio(jid2); 
     pitsi12 = new Suoritus(jid1); pitsi12.annaVakio(jid1); 
     pitsi23 = new Suoritus(jid2); pitsi23.annaVakio(jid2); 
     try {
     opintoloki.lisaa(aku1); 
     opintoloki.lisaa(aku2); 
     opintoloki.lisaa(pitsi21); 
     opintoloki.lisaa(pitsi11); 
     opintoloki.lisaa(pitsi22); 
     opintoloki.lisaa(pitsi12); 
     opintoloki.lisaa(pitsi23); 
     } catch ( Exception e) {
        System.err.println(e.getMessage()); 
     }
   }
  // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testKorvaaTaiLisaa85 
   * @throws SailoException when error
   */
  @Test
  public void testKorvaaTaiLisaa85() throws SailoException {    // Opintoloki: 85
    alustaOpintoloki(); 
    assertEquals("From: Opintoloki line: 88", 2, opintoloki.getKunnonKurssit().size()); 
    opintoloki.korvaaTaiLisaa(aku1); 
    assertEquals("From: Opintoloki line: 90", 2, opintoloki.getKunnonKurssit().size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta200 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta200() throws SailoException {    // Opintoloki: 200
    String hakemisto = "testikelmit"; 
    File dir = new File(hakemisto); 
    File ftied  = new File(hakemisto+"/kurssit.dat"); 
    File fhtied = new File(hakemisto+"/suoritukset.dat"); 
    dir.mkdir(); 
    ftied.delete(); 
    fhtied.delete(); 
    opintoloki = new Opintoloki();  // tiedostoja ei ole, tulee poikkeus 
    try {
    opintoloki.lueTiedostosta(hakemisto); 
    fail("Opintoloki: 214 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    alustaOpintoloki(); 
    opintoloki.setTiedosto(hakemisto);  // nimi annettava koska uusi poisti sen
    opintoloki.tallenna(); 
    opintoloki = new Opintoloki(); 
    opintoloki.lueTiedostosta(hakemisto); 
    List<Suoritus> loytyneet = opintoloki.haeSuoritukset(aku1); 
    Iterator<Suoritus> ih = loytyneet.iterator(); 
    assertEquals("From: Opintoloki line: 222", pitsi11, ih.next()); 
    assertEquals("From: Opintoloki line: 223", pitsi12, ih.next()); 
    assertEquals("From: Opintoloki line: 224", false, ih.hasNext()); 
    loytyneet = opintoloki.haeSuoritukset(aku2); 
    ih = loytyneet.iterator(); 
    assertEquals("From: Opintoloki line: 227", pitsi21, ih.next()); 
    assertEquals("From: Opintoloki line: 228", pitsi22, ih.next()); 
    assertEquals("From: Opintoloki line: 229", pitsi23, ih.next()); 
    assertEquals("From: Opintoloki line: 230", false, ih.hasNext()); 
    opintoloki.lisaa(aku2); 
    opintoloki.lisaa(pitsi23); 
    opintoloki.tallenna();  // tekee molemmista .bak
    assertEquals("From: Opintoloki line: 234", true, ftied.delete()); 
    assertEquals("From: Opintoloki line: 235", true, fhtied.delete()); 
    File fbak = new File(hakemisto+"/kurssit.bak"); 
    File fhbak = new File(hakemisto+"/suoritukset.bak"); 
    assertEquals("From: Opintoloki line: 238", true, fbak.delete()); 
    assertEquals("From: Opintoloki line: 239", true, fhbak.delete()); 
    assertEquals("From: Opintoloki line: 240", true, dir.delete()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoista281 */
  @Test
  public void testPoista281() {    // Opintoloki: 281
    alustaOpintoloki(); 
    assertEquals("From: Opintoloki line: 283", 2, opintoloki.getKunnonKurssit().size()); 
    assertEquals("From: Opintoloki line: 284", 2, opintoloki.haeSuoritukset(aku1).size()); 
    assertEquals("From: Opintoloki line: 285", 1, opintoloki.poista(aku1)); 
    assertEquals("From: Opintoloki line: 286", 1, opintoloki.getKunnonKurssit().size()); 
    assertEquals("From: Opintoloki line: 287", 0, opintoloki.haeSuoritukset(aku1).size()); 
    assertEquals("From: Opintoloki line: 288", 3, opintoloki.haeSuoritukset(aku2).size()); 
  } // Generated by ComTest END
}